name: Deploy to Testing

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Release
        required: true
  workflow_run:
    workflows: [ 'Docker Build Main' ]
    types: [ completed ]

env:
  IMAGE_NAME: alma-webhook-unstable
  DISPATCH_TAG: 

jobs:
  check_image_tag_exists:
    if: ${{ github.event_name }} == 'workflow_dispatch' 
    - name: Log into Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Check that the tag exists
      run: |
        if docker manifest inspect ghcr.io/mlibrary/$IMAGE_NAME:${{ github.event.inputs.tag }} > /dev/null; then
          echo '::set-output name=tag_exists::true'
        else
          echo '::set-output name=tag_exists::false'
          echo "Couldn't find image tag from input: ${{ github.event.inputs.tag }}"
        fi

  check_repo_tag_exists:
    needs: check_image_tag_exists
    if: ${{ needs.check_image_tag_exists.outputs.tag_exists == false }}
    runs-on: ubuntu-latest
    steps:
    - name: Clone latest repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Check that the tag exists in repository
      run: |
        if git rev-parse 'refs/tags/${{ github.event.inputs.tag }}' &> /dev/null; then
          echo '::set-output name=tag::${{ github.event.inputs.tag }}'
        elif git rev-parse '${{ github.event.inputs.tag }}' &> /dev/null; then
          echo "::set-output name=tag::`git rev-parse '${{ github.event.inputs.tag }}'`"
        else
          echo "Couldn't figure out repository tag from input: ${{ github.event.inputs.tag }}"
          echo "Aborting deployment."
          false
        fi

  build:
    needs: check_repo_tag_exists
    if: ${{ needs.check_repo_tag_exists.outputs.tag }}
    env: 
      REPO_TAG: ${{ needs.check_repo_tag_exists.outputs.tag }}
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
    - name: Log into Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/mlibrary/$IMAGE_NAME
        # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker tag $IMAGE_NAME $IMAGE_ID:$GITHUB_SHA
          docker push $IMAGE_ID --all-tags

  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    env:
      IMAGE_ID=ghcr.io/mlibrary/$IMAGE_NAME
    runs-on: ubuntu-latest
    - uses: azure/setup-kubectl@v1
    - name: Authenticate with kubernetes
      run: |
        mkdir -p ${HOME}/.kube/certs/cluster
        echo ${{ secrets.HATCHER_CLUSTER_CA }} | base64 -d > ${HOME}/.kube/certs/cluster/k8s-ca.crt
        kubectl config set-cluster cluster --certificate-authority=${HOME}/.kube/certs/cluster/k8s-ca.crt --server=https://hatcher.kubernetes.lib.umich.edu
        kubectl config set-credentials default --token=`echo ${{ secrets.HATCHER_TESTING_TOKEN }} | base64 -d`
        kubectl config set-context default --cluster=cluster --user=default --namespace=alma-utilities-testing
        kubectl config use-context default
    - name: Automatic Deploy
      if: ${{ github.event_name == 'workflow_run' }}
      run: |
        kubectl set image deployment web web=$IMAGE_ID:${{ github.sha }}
    - name: Manual Deploy
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        kubectl set image deployment web web=$IMAGE_ID:$TAG
