name: Docker Tag Latest Release and Deploy to Production

on:
  release:
    types: [ released ]

env:
  PROD_IMAGE_ID: ghcr.io/mlibrary/alma-webhook
  UNSTABLE_IMAGE_ID: ghcr.io/mlibrary/alma-webhook-unstable

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Clone latest repository
      uses: actions/checkout@v2
    - name: Tag latest release in Github Container Registry
      run: |
        docker pull $UNSTABLE_IMAGE_ID:${{ github.sha }}
        docker tag $UNSTABLE_IMAGE_ID:${{ github.sha }} $PROD_IMAGE_ID:${{ github.event.release.tag_name }}
        docker tag $UNSTABLE_IMAGE_ID:${{ github.sha }} $PROD_IMAGE_ID:latest
        docker push $PROD_IMAGE_ID:${{ github.event.release.tag_name }}
        docker push $PROD_IMAGE_ID:latest
    - uses: azure/setup-kubectl@v1
    - name: Authenticate with kubernetes
      run: |
        mkdir -p ${HOME}/.kube/certs/cluster
        echo ${{ secrets.HATCHER_CLUSTER_CA }} | base64 -d > ${HOME}/.kube/certs/cluster/k8s-ca.crt
        kubectl config set-cluster cluster --certificate-authority=${HOME}/.kube/certs/cluster/k8s-ca.crt --server=https://hatcher.kubernetes.lib.umich.edu
        kubectl config set-credentials default --token=`echo ${{ secrets.HATCHER_PRODUCTION_TOKEN }} | base64 -d`
        kubectl config set-context default --cluster=cluster --user=default --namespace=alma-webhook
        kubectl config use-context default
    - name: Automatic Deploy to Production
      run: kubectl set image deployment web web=$IMAGE_ID:${{ github.event.release.tag_name }}

